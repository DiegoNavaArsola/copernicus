paste(df$DisponeCasa,",")
strsplit(paste(df$DisponeCasa,","),",")
for (i in 1:dim(df)[2]) {
for (j in 0:lnc) {
Nx[j,i] <- sum(df[[i]] == j-1,na.rm = T)
Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
epsilon[j,i] <- (Nx[j,i]*((Ncx[j,i]/Nx[j,i])-(Nc/n)))/(Nx[j,i]*(Nc/n)*sqrt((1-(Nc/n))))
arg_ln[j,i] <- (Ncx[j,i]/Nc)/((Nx[j,i]-Ncx[j,i])/(n-Nc))
score[j,i] <- log(arg_ln[j,i],exp(1))
}
}
is.character(df$DisponeCasa)
table(cont_mul_var(df$DisponeCasa,","))
sum(cont_mul_var(df$DisponeCasa,",")==1,na.rm = T)
sum(cont_mul_var(df$DisponeCasa,",") == 1,na.rm = T)
table(cont_mul_var(df$DisponeCasa,","))[1]
table(cont_mul_var(df$DisponeCasa,","))[2]
table(cont_mul_var(df$DisponeCasa,","))[1,2]
table(cont_mul_var(df$DisponeCasa,","))[,2]
table(cont_mul_var(df$DisponeCasa,","))[2,1]
table(cont_mul_var(df$DisponeCasa,","))[2]
t1 <- table(cont_mul_var(df$DisponeCasa,","))[2]
t1
t1+1
t1 <- table(cont_mul_var(df$DisponeCasa,","))[[2]]
t1
sum(df$DisponeCasa == 1)
sum(df$DisponeCasa == 1,na.rm = T)
sum(strsplit(paste(df$DisponeCasa,collapse = ","),",") == 1,na.rm = T)
strsplit(paste(df$DisponeCasa,collapse = ","),",")
table(df$Status == 7)
table(df$Status == 7)
table(df$Status == 7)[1]
table(df$Status == 7)[[1]]
table(df$Status == 7)[[2]]
table(df$Status == 7 | df$Status == 9)[[2]]
aux <- cont_mul_var(df[[10]])
aux <- cont_mul_var(df[[10]],",")
aux
taux <- table(aux)
taux
taux[[1]]
taux[[2]]
taux[[0]]
taux[[1]]
taux[[2]]
taux[[3]]
table(cont_mul_var(df[[10]],","))
table(cont_mul_var(df[[10]],",")==1)
table(cont_mul_var(df[[10]]==1,","))
df[[10]] == 1
table(cont_mul_var(df[[10]]==1,","))
table(cont_mul_var(df[[10]]==2,","))
df[[10]] & df[[3]] == 7
table(aux==7)
table(df[[3]] == 7)
table(df[[3]] == 7 | df[[3]] == 9)
aux2 <- cont_mul_var(df[[i]]==7,",")
aux2
aux2 <- cont_mul_var(df[[i]]==7 | df[[i]] ==9,",")
aux2
table(aux2)
aux2 <- cont_mul_var(df[[i]] ==9,",")
table(aux2)
aux <- cont_mul_var(df[[10]],",")
aux
aux <- cont_mul_var(df[[10]]==1,",")
aux
table(aux)
aux <- cont_mul_var(df[[10]],",")
for (i in 1:dim(df)[2]) {
for (j in 0:lnc) {
if (is.character(df[[i]]) == TRUE) {
aux <- cont_mul_var(df[[i]],",")
taux <- table(aux)
Nx[j,i] <- taux[[j+1]]
}
else{
Nx[j,i] <- sum(df[[i]] == j-1,na.rm = T)
#Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
}
Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
epsilon[j,i] <- (Nx[j,i]*((Ncx[j,i]/Nx[j,i])-(Nc/n)))/(Nx[j,i]*(Nc/n)*sqrt((1-(Nc/n))))
arg_ln[j,i] <- (Ncx[j,i]/Nc)/((Nx[j,i]-Ncx[j,i])/(n-Nc))
score[j,i] <- log(arg_ln[j,i],exp(1))
}
}
Nx[j,i] <- taux[[j]]
for (i in 1:dim(df)[2]) {
for (j in 0:lnc) {
if (is.character(df[[i]]) == TRUE) {
aux <- cont_mul_var(df[[i]],",")
taux <- table(aux)
Nx[j,i] <- taux[[j]]
}
else{
Nx[j,i] <- sum(df[[i]] == j-1,na.rm = T)
#Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
}
Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
epsilon[j,i] <- (Nx[j,i]*((Ncx[j,i]/Nx[j,i])-(Nc/n)))/(Nx[j,i]*(Nc/n)*sqrt((1-(Nc/n))))
arg_ln[j,i] <- (Ncx[j,i]/Nc)/((Nx[j,i]-Ncx[j,i])/(n-Nc))
score[j,i] <- log(arg_ln[j,i],exp(1))
}
}
taux
Nx
for (i in 1:dim(df)[2]) {
for (j in 0:lnc) {
if (is.character(df[[i]]) == TRUE) {
aux <- cont_mul_var(df[[i]],",")
taux <- table(aux)
Nx[j,i] <- taux[[j+1]]
}
else{
Nx[j,i] <- sum(df[[i]] == j-1,na.rm = T)
#Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
}
Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
epsilon[j,i] <- (Nx[j,i]*((Ncx[j,i]/Nx[j,i])-(Nc/n)))/(Nx[j,i]*(Nc/n)*sqrt((1-(Nc/n))))
arg_ln[j,i] <- (Ncx[j,i]/Nc)/((Nx[j,i]-Ncx[j,i])/(n-Nc))
score[j,i] <- log(arg_ln[j,i],exp(1))
}
}
taux
NX
Nx
for (i in 1:dim(df)[2]) {
for (j in 0:lnc) {
if (is.character(df[[i]]) == TRUE) {
aux <- cont_mul_var(df[[i]],",")
taux <- table(aux)
Nx[j+1,i] <- taux[[j]]
}
else{
Nx[j,i] <- sum(df[[i]] == j-1,na.rm = T)
#Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
}
Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
epsilon[j,i] <- (Nx[j,i]*((Ncx[j,i]/Nx[j,i])-(Nc/n)))/(Nx[j,i]*(Nc/n)*sqrt((1-(Nc/n))))
arg_ln[j,i] <- (Ncx[j,i]/Nc)/((Nx[j,i]-Ncx[j,i])/(n-Nc))
score[j,i] <- log(arg_ln[j,i],exp(1))
}
}
taux
NX
Nx
for (i in 1:dim(df)[2]) {
for (j in 0:lnc) {
# if (is.character(df[[i]]) == TRUE) {
#   aux <- cont_mul_var(df[[i]],",")
#   taux <- table(aux)
#   Nx[j+1,i] <- taux[[j]]
# }
else{
Nx[j,i] <- sum(df[[i]] == j-1,na.rm = T)
#Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
}
Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
epsilon[j,i] <- (Nx[j,i]*((Ncx[j,i]/Nx[j,i])-(Nc/n)))/(Nx[j,i]*(Nc/n)*sqrt((1-(Nc/n))))
arg_ln[j,i] <- (Ncx[j,i]/Nc)/((Nx[j,i]-Ncx[j,i])/(n-Nc))
score[j,i] <- log(arg_ln[j,i],exp(1))
}
}
for (i in 1:dim(df)[2]) {
for (j in 0:lnc) {
# if (is.character(df[[i]]) == TRUE) {
#   aux <- cont_mul_var(df[[i]],",")
#   taux <- table(aux)
#   Nx[j+1,i] <- taux[[j]]
# }
#else{
Nx[j,i] <- sum(df[[i]] == j-1,na.rm = T)
#Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
#}
Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
epsilon[j,i] <- (Nx[j,i]*((Ncx[j,i]/Nx[j,i])-(Nc/n)))/(Nx[j,i]*(Nc/n)*sqrt((1-(Nc/n))))
arg_ln[j,i] <- (Ncx[j,i]/Nc)/((Nx[j,i]-Ncx[j,i])/(n-Nc))
score[j,i] <- log(arg_ln[j,i],exp(1))
}
}
Nx
Nx[j+1,i] <- taux[[j]]
Nx
for (i in 1:dim(df)[2]) {
for (j in 0:lnc) {
if (is.character(df[[i]]) == TRUE) {
aux <- cont_mul_var(df[[i]],",")
taux <- table(aux)
Nx[j,i] <- taux[[j]]
}
else{
Nx[j,i] <- sum(df[[i]] == j-1,na.rm = T)
#Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
}
Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
epsilon[j,i] <- (Nx[j,i]*((Ncx[j,i]/Nx[j,i])-(Nc/n)))/(Nx[j,i]*(Nc/n)*sqrt((1-(Nc/n))))
arg_ln[j,i] <- (Ncx[j,i]/Nc)/((Nx[j,i]-Ncx[j,i])/(n-Nc))
score[j,i] <- log(arg_ln[j,i],exp(1))
}
}
Nx
Nx[j,i] <- taux[[j+1]]
Nx
for (i in 1:dim(df)[2]) {
for (j in 0:lnc) {
if (is.character(df[[i]]) == TRUE) {
aux <- cont_mul_var(df[[i]],",")
taux <- table(aux)
Nx[j,i] <- taux[[j+1]]
}
else{
Nx[j,i] <- sum(df[[i]] == j-1,na.rm = T)
#Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
}
Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
epsilon[j,i] <- (Nx[j,i]*((Ncx[j,i]/Nx[j,i])-(Nc/n)))/(Nx[j,i]*(Nc/n)*sqrt((1-(Nc/n))))
arg_ln[j,i] <- (Ncx[j,i]/Nc)/((Nx[j,i]-Ncx[j,i])/(n-Nc))
score[j,i] <- log(arg_ln[j,i],exp(1))
}
}
Nx
for (i in 1:dim(df)[2]) {
for (j in 0:lnc) {
if (is.character(df[[i]]) == TRUE) {
aux <- cont_mul_var(df[[i]],",")
taux <- table(aux)
Nx[j,i] <- taux[[j+2]]
}
else{
Nx[j,i] <- sum(df[[i]] == j-1,na.rm = T)
#Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
}
Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
epsilon[j,i] <- (Nx[j,i]*((Ncx[j,i]/Nx[j,i])-(Nc/n)))/(Nx[j,i]*(Nc/n)*sqrt((1-(Nc/n))))
arg_ln[j,i] <- (Ncx[j,i]/Nc)/((Nx[j,i]-Ncx[j,i])/(n-Nc))
score[j,i] <- log(arg_ln[j,i],exp(1))
}
}
Nx
taux
for (i in 1:dim(df)[2]) {
for (j in 0:lnc) {
if (is.character(df[[i]]) == TRUE) {
aux <- cont_mul_var(df[[i]],",")
taux <- table(aux)
Nx[j+1,i] <- taux[[j+1]]
}
else{
Nx[j,i] <- sum(df[[i]] == j-1,na.rm = T)
#Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
}
Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
epsilon[j,i] <- (Nx[j,i]*((Ncx[j,i]/Nx[j,i])-(Nc/n)))/(Nx[j,i]*(Nc/n)*sqrt((1-(Nc/n))))
arg_ln[j,i] <- (Ncx[j,i]/Nc)/((Nx[j,i]-Ncx[j,i])/(n-Nc))
score[j,i] <- log(arg_ln[j,i],exp(1))
}
}
Nx
table(cont_mul_var(df$DisponeCasa))
table(cont_mul_var(df$DisponeCasa),"r")
table(cont_mul_var(df$DisponeCasa),",")
table(cont_mul_var(df$DisponeCasa,","))
sum(cont_mul_var(df$DisponeCasa,","))
sum(cont_mul_var(df$DisponeCasa,","),na.rm = T)
table(df$`Opción 1` | df$`Opción 2`)
table(df$`Opción 1` & df$`Opción 2`)
table(df$`Opción 1`)
21+10+7+13+4+5+12+1+1+23+7+1+1+1+1+24+1+23
table(df$`Opción 1` & df$`Opción 2`==11)
table(cont_mul_var(df$DisponeCasa,",") & df$Status==7)
table(cont_mul_var((df$DisponeCasa & df$Status==9),",") & df$Status==7)
table(cont_mul_var(df$DisponeCasa==1,",") & df$Status==7)
table(cont_mul_var(df$DisponeCasa,",") & df$Status==7)
table(cont_mul_var(df$DisponeCasa,","))
table(cont_mul_var((df$DisponeCasa & df$Status==9),","))
table(cont_mul_var((df$DisponeCasa & df$Status),","))
table(cont_mul_var(df$DisponeCasa & df$Status,","))
table(cont_mul_var(df$DisponeCasa,","))
df$Status==7 && df$DisponeCasa==1
df$Status==7 & df$DisponeCasa==1
taux
cont_mul_var(df[[10]])
cont_mul_var(df[[10]],",")
nomvar[14]
nomvar[10]
nomvar[6]
table(df$MotivoEstudio)
table(df$MotivoEstudio,",")
table(cont_mul_var(df$MotivoEstudio,","))
dim(df)
dim(df)[1]
lnc
for (k in 1:dim(df)[1]) {
if (is.na(df$Correo[k]) == TRUE) {
df$Correo[k] <- 0
}
else{
df$Correo[k] <- 1
}
if (is.na(df$Facebook[k]) == TRUE) {
df$Facebook[k] <- 0
}
else{
df$Facebook[k] <- 1
}
}
for (i in 1:dim(df)[2]) {
for (j in 0:lnc) {
if (is.character(df[[i]]) == TRUE) {
aux <- cont_mul_var(df[[i]],",")
taux <- table(aux)
Nx[j+1,i] <- taux[[j+1]]
}
else{
Nx[j,i] <- sum(df[[i]] == j-1,na.rm = T)
#Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
}
Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
epsilon[j,i] <- (Nx[j,i]*((Ncx[j,i]/Nx[j,i])-(Nc/n)))/(Nx[j,i]*(Nc/n)*sqrt((1-(Nc/n))))
arg_ln[j,i] <- (Ncx[j,i]/Nc)/((Nx[j,i]-Ncx[j,i])/(n-Nc))
score[j,i] <- log(arg_ln[j,i],exp(1))
}
}
#Convierte NaN en ceros
epsilon[is.nan(epsilon)] <- 0
for (i in 1:dim(df)[2]) {
for (j in 0:lnc) {
if (is.character(df[[i]]) == TRUE) {
aux <- cont_mul_var(df[[i]],",")
taux <- table(aux)
Nx[j+1,i] <- taux[[j+1]]
}
else{
Nx[j,i] <- sum(df[[i]] == j-1,na.rm = T)
#Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
}
Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
epsilon[j,i] <- (Nx[j,i]*((Ncx[j,i]/Nx[j,i])-(Nc/n)))/(Nx[j,i]*(Nc/n)*sqrt((1-(Nc/n))))
arg_ln[j,i] <- (Ncx[j,i]/Nc)/((Nx[j,i]-Ncx[j,i])/(n-Nc))
score[j,i] <- log(arg_ln[j,i],exp(1))
}
}
nomvar[25]
sum(df$EscolaridadJefe)
table(df$EscolaridadJefe)
#Funcion para contar variables con celdas con multiples datos (sep es un string)
cont_mul_var <- function(column,sep) {
column.string <- paste(column,collapse = sep)
column.vector <- strsplit(column.string,sep)
return(column.vector)
}
x <- c(0:128)
y <- c(213,215,431,596)
nclas <- c(x,y)
lnc <- length(nclas)
#Inicialización de matrices
Nx = matrix(0, nrow = lnc+1, ncol = dim(df)[2])
Ncx = matrix(0, nrow = lnc+1, ncol = dim(df)[2])
epsilon = matrix(0, nrow = lnc+1, ncol = dim(df)[2])
arg_ln = matrix(0, nrow = lnc+1, ncol = dim(df)[2])
score = matrix(0, nrow = lnc+1, ncol = dim(df)[2])
for (k in 1:dim(df)[1]) {
if (is.na(df$Correo[k]) == TRUE) {
df$Correo[k] <- 0
}
else{
df$Correo[k] <- 1
}
if (is.na(df$Facebook[k]) == TRUE) {
df$Facebook[k] <- 0
}
else{
df$Facebook[k] <- 1
}
}
for (i in 1:dim(df)[2]) {
for (j in 0:lnc) {
if (is.character(df[[i]]) == TRUE) {
aux <- cont_mul_var(df[[i]],",")
taux <- table(aux)
Nx[j+1,i] <- taux[[j+1]]
}
else{
Nx[j,i] <- sum(df[[i]] == j-1,na.rm = T)
#Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
}
Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
epsilon[j,i] <- (Nx[j,i]*((Ncx[j,i]/Nx[j,i])-(Nc/n)))/(Nx[j,i]*(Nc/n)*sqrt((1-(Nc/n))))
arg_ln[j,i] <- (Ncx[j,i]/Nc)/((Nx[j,i]-Ncx[j,i])/(n-Nc))
score[j,i] <- log(arg_ln[j,i],exp(1))
}
}
x <- c(0:128)
y <- c(213,215,431,596)
nclas <- c(x,y)
lnc <- length(nclas)
#Inicialización de matrices
Nx = matrix(0, nrow = lnc+1, ncol = dim(df)[2])
Ncx = matrix(0, nrow = lnc+1, ncol = dim(df)[2])
epsilon = matrix(0, nrow = lnc+1, ncol = dim(df)[2])
arg_ln = matrix(0, nrow = lnc+1, ncol = dim(df)[2])
score = matrix(0, nrow = lnc+1, ncol = dim(df)[2])
for (k in 1:dim(df)[1]) {
if (is.na(df$Correo[k]) == TRUE) {
df$Correo[k] <- 0
}
else{
df$Correo[k] <- 1
}
if (is.na(df$Facebook[k]) == TRUE) {
df$Facebook[k] <- 0
}
else{
df$Facebook[k] <- 1
}
}
for (k in 1:lnc) {
if (is.na(df$Correo[k]) == TRUE) {
df$Correo[k] <- 0
}
else{
df$Correo[k] <- 1
}
if (is.na(df$Facebook[k]) == TRUE) {
df$Facebook[k] <- 0
}
else{
df$Facebook[k] <- 1
}
}
View(df)
#Data frame con los datos del agua
#df <- Copernicus_Data_set
df <- data_cop_simp
#Tamaño de la base de datos
n <- dim(df)[1]
#Clases a tratar / na.rm = T sirve para ignorar NAN
Nc <- sum(df$Status == 7 | df$Status == 9,na.rm = T)
#Vector con el nombre de las variables
nomvar <- names(df)
#Funcion para contar variables con celdas con multiples datos (sep es un string)
cont_mul_var <- function(column,sep) {
column.string <- paste(column,collapse = sep)
column.vector <- strsplit(column.string,sep)
return(column.vector)
}
x <- c(0:128)
y <- c(213,215,431,596)
nclas <- c(x,y)
lnc <- length(nclas)
#Inicialización de matrices
Nx = matrix(0, nrow = lnc+1, ncol = dim(df)[2])
Ncx = matrix(0, nrow = lnc+1, ncol = dim(df)[2])
epsilon = matrix(0, nrow = lnc+1, ncol = dim(df)[2])
arg_ln = matrix(0, nrow = lnc+1, ncol = dim(df)[2])
score = matrix(0, nrow = lnc+1, ncol = dim(df)[2])
for (k in 1:lnc) {
if (is.na(df$Correo[k]) == TRUE) {
df$Correo[k] <- 0
}
else{
df$Correo[k] <- 1
}
if (is.na(df$Facebook[k]) == TRUE) {
df$Facebook[k] <- 0
}
else{
df$Facebook[k] <- 1
}
}
for (i in 1:dim(df)[2]) {
for (j in 0:lnc) {
if (is.character(df[[i]]) == TRUE) {
aux <- cont_mul_var(df[[i]],",")
taux <- table(aux)
Nx[j+1,i] <- taux[[j+1]]
}
else{
Nx[j,i] <- sum(df[[i]] == j-1,na.rm = T)
#Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
}
Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
epsilon[j,i] <- (Nx[j,i]*((Ncx[j,i]/Nx[j,i])-(Nc/n)))/(Nx[j,i]*(Nc/n)*sqrt((1-(Nc/n))))
arg_ln[j,i] <- (Ncx[j,i]/Nc)/((Nx[j,i]-Ncx[j,i])/(n-Nc))
score[j,i] <- log(arg_ln[j,i],exp(1))
}
}
View(epsilon)
for (i in 1:dim(df)[2]) {
for (j in 0:lnc) {
# if (is.character(df[[i]]) == TRUE) {
#   aux <- cont_mul_var(df[[i]],",")
#   taux <- table(aux)
#   Nx[j+1,i] <- taux[[j+1]]
# }
#else{
Nx[j,i] <- sum(df[[i]] == j-1,na.rm = T)
#Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
#}
Ncx[j,i] <- sum(df[[i]] == j-1 & (df[[3]] == 7 | df[[3]] == 9),na.rm = T)
epsilon[j,i] <- (Nx[j,i]*((Ncx[j,i]/Nx[j,i])-(Nc/n)))/(Nx[j,i]*(Nc/n)*sqrt((1-(Nc/n))))
arg_ln[j,i] <- (Ncx[j,i]/Nc)/((Nx[j,i]-Ncx[j,i])/(n-Nc))
score[j,i] <- log(arg_ln[j,i],exp(1))
}
}
nomvar[25]
table(df$EscolaridadJefe)
nomvar[19]
table(df$Promedio)
epsilon[25,11]
epsilon[11,25]
